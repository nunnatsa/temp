# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  workflow_dispatch:

jobs:
  collect-info:
    name: Prepare some data to consume later
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the latest code
        id: create-date-info
        run: |
          BUILD_DATE_TIME=$(date +%Y-%m-%dT%H:%M:%S)
          echo "BUILD_DATE_TIME=${BUILD_DATE_TIME}" >> "$GITHUB_OUTPUT"
          echo "Generated build BUILD_DATE_TIME: ${BUILD_DATE_TIME}"
      - name: Get git ref
        id: get-git-ref
        run: |
          GIT_REF=${{ github.ref }}
          if [[ "${GIT_REF}" == "refs/heads/main" ]]; then
            GIT_REF="main"
          else
            GIT_REF=$(echo "${GIT_REF}" | sed 's|refs/heads/||')
          fi
          echo "GIT_REF=${GIT_REF}" >> "$GITHUB_OUTPUT"
          echo "Generated git ref: ${GIT_REF}"
      - name: Create Environment Variables
        run: |
          echo "ADDITIONAL_INFO=additional-info" >> "$GITHUB_ENV"
    outputs:
      # Define job outputs. The 'new_version' job output will take the value
      # of the 'version' step output from the 'generate-version' step.
      build_date_time: ${{ steps.create-date-info.outputs.BUILD_DATE_TIME }}
      git_ref: ${{ steps.get-git-ref.outputs.GIT_REF }}
      additional_info": ${{ env.ADDITIONAL_INFO }}
  
  use-info:
    name: Use the data generated in the previous step
    runs-on: ubuntu-latest
    needs: collect-info
    env:
      BUILD_DATE_TIME: ${{ needs.collect-info.outputs.BUILD_DATE_TIME }}
      GIT_REF: ${{ needs.collect-info.outputs.git_ref }}
      ADDITIONAL_INFO: ${{ needs.collect-info.outputs.additional_info }}
    steps:
      - name: Print the data
        run: |
          echo "BUILD_DATE_TIME: ${{ env.BUILD_DATE_TIME }}"
          echo "GIT_REF: ${{ env.GIT_REF }}"
          echo "ADDITIONAL_INFO: ${{ env.ADDITIONAL_INFO }}"
